// Copyright (C) 2018  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details.

// VENDOR "Altera"
// PROGRAM "Quartus Prime"
// VERSION "Version 18.1.0 Build 625 09/12/2018 SJ Standard Edition"

// DATE "07/08/2020 13:26:14"

// 
// Device: Altera EP4CE10F17C8 Package FBGA256
// 

// 
// This Verilog file should be used for ModelSim (Verilog) only
// 

`timescale 1 ps/ 1 ps

module full_adder (
	in_1,
	in_2,
	cin,
	sum,
	count);
input 	in_1;
input 	in_2;
input 	cin;
output 	sum;
output 	count;

// Design Ports Information
// sum	=>  Location: PIN_L7,	 I/O Standard: 2.5 V,	 Current Strength: Default
// count	=>  Location: PIN_M6,	 I/O Standard: 2.5 V,	 Current Strength: Default
// cin	=>  Location: PIN_E15,	 I/O Standard: 2.5 V,	 Current Strength: Default
// in_1	=>  Location: PIN_M2,	 I/O Standard: 2.5 V,	 Current Strength: Default
// in_2	=>  Location: PIN_M1,	 I/O Standard: 2.5 V,	 Current Strength: Default


wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
// synopsys translate_off
initial $sdf_annotate("full_adder_v.sdo");
// synopsys translate_on

wire \sum~output_o ;
wire \count~output_o ;
wire \in_1~input_o ;
wire \cin~input_o ;
wire \in_2~input_o ;
wire \half_adder_inst1|Add0~0_combout ;
wire \count~0_combout ;


hard_block auto_generated_inst(
	.devpor(devpor),
	.devclrn(devclrn),
	.devoe(devoe));

// Location: IOOBUF_X11_Y0_N9
cycloneive_io_obuf \sum~output (
	.i(\half_adder_inst1|Add0~0_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\sum~output_o ),
	.obar());
// synopsys translate_off
defparam \sum~output .bus_hold = "false";
defparam \sum~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X7_Y0_N9
cycloneive_io_obuf \count~output (
	.i(\count~0_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\count~output_o ),
	.obar());
// synopsys translate_off
defparam \count~output .bus_hold = "false";
defparam \count~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOIBUF_X0_Y11_N15
cycloneive_io_ibuf \in_1~input (
	.i(in_1),
	.ibar(gnd),
	.o(\in_1~input_o ));
// synopsys translate_off
defparam \in_1~input .bus_hold = "false";
defparam \in_1~input .simulate_z_as = "z";
// synopsys translate_on

// Location: IOIBUF_X34_Y12_N1
cycloneive_io_ibuf \cin~input (
	.i(cin),
	.ibar(gnd),
	.o(\cin~input_o ));
// synopsys translate_off
defparam \cin~input .bus_hold = "false";
defparam \cin~input .simulate_z_as = "z";
// synopsys translate_on

// Location: IOIBUF_X0_Y11_N22
cycloneive_io_ibuf \in_2~input (
	.i(in_2),
	.ibar(gnd),
	.o(\in_2~input_o ));
// synopsys translate_off
defparam \in_2~input .bus_hold = "false";
defparam \in_2~input .simulate_z_as = "z";
// synopsys translate_on

// Location: LCCOMB_X6_Y7_N0
cycloneive_lcell_comb \half_adder_inst1|Add0~0 (
// Equation(s):
// \half_adder_inst1|Add0~0_combout  = \in_1~input_o  $ (\cin~input_o  $ (\in_2~input_o ))

	.dataa(\in_1~input_o ),
	.datab(gnd),
	.datac(\cin~input_o ),
	.datad(\in_2~input_o ),
	.cin(gnd),
	.combout(\half_adder_inst1|Add0~0_combout ),
	.cout());
// synopsys translate_off
defparam \half_adder_inst1|Add0~0 .lut_mask = 16'hA55A;
defparam \half_adder_inst1|Add0~0 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: LCCOMB_X6_Y7_N26
cycloneive_lcell_comb \count~0 (
// Equation(s):
// \count~0_combout  = (\in_1~input_o  & ((\cin~input_o ) # (\in_2~input_o ))) # (!\in_1~input_o  & (\cin~input_o  & \in_2~input_o ))

	.dataa(\in_1~input_o ),
	.datab(gnd),
	.datac(\cin~input_o ),
	.datad(\in_2~input_o ),
	.cin(gnd),
	.combout(\count~0_combout ),
	.cout());
// synopsys translate_off
defparam \count~0 .lut_mask = 16'hFAA0;
defparam \count~0 .sum_lutc_input = "datac";
// synopsys translate_on

assign sum = \sum~output_o ;

assign count = \count~output_o ;

endmodule

module hard_block (

	devpor,
	devclrn,
	devoe);

// Design Ports Information
// ~ALTERA_ASDO_DATA1~	=>  Location: PIN_C1,	 I/O Standard: 2.5 V,	 Current Strength: Default
// ~ALTERA_FLASH_nCE_nCSO~	=>  Location: PIN_D2,	 I/O Standard: 2.5 V,	 Current Strength: Default
// ~ALTERA_DCLK~	=>  Location: PIN_H1,	 I/O Standard: 2.5 V,	 Current Strength: Default
// ~ALTERA_DATA0~	=>  Location: PIN_H2,	 I/O Standard: 2.5 V,	 Current Strength: Default
// ~ALTERA_nCEO~	=>  Location: PIN_F16,	 I/O Standard: 2.5 V,	 Current Strength: 8mA

input 	devpor;
input 	devclrn;
input 	devoe;

wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

wire \~ALTERA_ASDO_DATA1~~padout ;
wire \~ALTERA_FLASH_nCE_nCSO~~padout ;
wire \~ALTERA_DATA0~~padout ;
wire \~ALTERA_ASDO_DATA1~~ibuf_o ;
wire \~ALTERA_FLASH_nCE_nCSO~~ibuf_o ;
wire \~ALTERA_DATA0~~ibuf_o ;


endmodule
